{
  "Comment": "AWS Lambda Power Tuning state machine",
  "StartAt": "Initializer",
  "States": {
    "Initializer": {
      "Type": "Task",
      "Resource": "${initializerArn}",
      "Next": "Publisher",
      "ResultPath": "$.lambdaConfigurations",
      "TimeoutSeconds": ${totalExecutionTimeout}
    },
    "Publisher": {
      "Type": "Task",
      "Resource": "${publisherArn}",
      "Next": "IsCountReached",
      "ResultPath": "$.lambdaConfigurations",
      "TimeoutSeconds": ${totalExecutionTimeout},
      "Catch": [{
        "ErrorEquals": [ "States.ALL" ],
        "Next": "CleanUpOnError",
        "ResultPath": "$.error"
      }]
    },
    "IsCountReached": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.lambdaConfigurations.iterator.continue",
          "BooleanEquals": true,
          "Next": "Publisher"
        }
      ],
      "Default": "Branching"
    },
    "Branching": {
      "Type": "Map",
      "Next": "Cleaner",
      "ItemsPath": "$.lambdaConfigurations.powerValues",
      "ResultPath": "$.stats",
      "ItemSelector": {
        "input.$": "$",
        "value.$": "$$.Map.Item.Value"
      },
      "MaxConcurrency": 0,
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "Next": "CleanUpOnError",
          "ResultPath": "$.error"
        }
      ],
      "Iterator": {
        "StartAt": "Executor",
        "States": {
          "Executor": {
            "Type": "Task",
            "Resource": "${executorArn}",
            "End": true,
            "TimeoutSeconds": ${totalExecutionTimeout},
            "Retry": [{
                "ErrorEquals": [
                  "States.ALL"
                ],
                "IntervalSeconds": 3,
                "MaxAttempts": 2
            }]
          }
        }
      }
    },
    "Cleaner": {
      "Type": "Task",
      "Next": "Analyzer",
      "ResultPath": null,
      "TimeoutSeconds": ${totalExecutionTimeout},
      "Resource": "${cleanerArn}"
    },
    "Analyzer": {
      "Type": "Task",
      "Resource": "${analyzerArn}",
      "ResultPath": "$.analysis",
      "TimeoutSeconds": 10,
      "Next": "Optimizer"
    },
    "Optimizer": {
      "Type": "Task",
      "Resource": "${optimizerArn}",
      "ResultPath": null,
      "OutputPath": "$.analysis",
      "TimeoutSeconds": ${totalExecutionTimeout},
      "End": true
    },
    "CleanUpOnError": {
      "Type": "Task",
      "ResultPath": null,
      "OutputPath": null,
      "Resource": "${cleanerArn}",
      "TimeoutSeconds": ${totalExecutionTimeout},
      "End": true
    }
  }
}
